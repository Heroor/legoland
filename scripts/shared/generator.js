const { toCamelCase } = require('./index')
const pkg = require('../../package.json')

const getImports = (libs, isRelative = false) =>
  libs
    .map(lib => {
      return `import ${toCamelCase(lib.name)} from '${isRelative ? './' : '@'}${
        lib.type
      }/${lib.name}'`
    })
    .join('\n')

exports.generateEntryScript = function(libs) {
  const importsSrc = getImports(libs, true)
  const libNames = libs.map(lib => toCamelCase(lib.name))
  const exportsSrc = libNames.join(',\n  ')

  const resultSrc = `// Generated by cli
${importsSrc}

export {
  ${exportsSrc},
}

const Libs = [
  ${libNames.join(',\n  ')},
]

function install(Vue) {
  Libs.forEach(lib => {
    Vue.use(lib)
  })
}

export default {
  version: '${pkg.version}',
  install,
  ${exportsSrc},
}
`
  return resultSrc
}

exports.generateGlobalScript = function(libs) {
  const importsSrc = getImports(libs)
  const usesSrc = libs
    .map(lib => `Vue.use(${toCamelCase(lib.name)})`)
    .join('\n  ')

  const resultSrc = `// Generated by cli
${importsSrc}

export default function installGlobal(Vue) {
  ${usesSrc}
}
`
  return resultSrc
}
